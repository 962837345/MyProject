{"version":3,"sources":["webpack:///./src/views/studyNote/Axios.vue?3bc8","webpack:///src/views/studyNote/Axios.vue","webpack:///./src/views/studyNote/Axios.vue?75ad","webpack:///./src/views/studyNote/Axios.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_m","on","buttonClick","staticRenderFns","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,UAAU,CAACE,YAAY,kBAAkB,CAACF,EAAG,KAAK,CAACJ,EAAIO,GAAG,cAAcH,EAAG,KAAK,CAACJ,EAAIO,GAAG,kBAAkBH,EAAG,IAAI,CAACJ,EAAIO,GAAG,6CAA6CH,EAAG,IAAI,CAACJ,EAAIO,GAAG,2BAA2BP,EAAIQ,GAAG,GAAGJ,EAAG,MAAM,CAACE,YAAY,gBAAgB,CAACF,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,YAAY,CAACK,GAAG,CAAC,MAAQT,EAAIU,cAAc,CAACV,EAAIO,GAAG,WAAW,GAAGP,EAAIQ,GAAG,KAAKJ,EAAG,KAAK,CAACJ,EAAIO,GAAG,cAAcP,EAAIQ,GAAG,MACzfG,EAAkB,CAAC,WAAa,IAAIX,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,gBAAgB,CAACF,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,OAAO,CAACJ,EAAIO,GAAG,kCAAkCH,EAAG,MAAM,CAACJ,EAAIO,GAAG,YAAYH,EAAG,OAAO,CAACE,YAAY,QAAQ,CAACN,EAAIO,GAAG,oOAAoOP,EAAIO,GAAG,iBAAiB,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACJ,EAAIO,GAAG,YAAYH,EAAG,OAAO,CAACE,YAAY,QAAQ,CAACN,EAAIO,GAAG,sBAAsBH,EAAG,OAAO,CAACE,YAAY,eAAe,CAACN,EAAIO,GAAG,mBAAqBP,EAAIO,GAAG,+XAAgYP,EAAIO,GAAG,eAAe,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACJ,EAAIO,GAAG,YAAYH,EAAG,OAAO,CAACE,YAAY,QAAQ,CAACN,EAAIO,GAAG,oZAAoZP,EAAIO,GAAG,gB,YCqFxuD,GACE,KAAF,QACE,QAAF,CACI,YADJ,WAEM,OAAN,OAAM,CAAN,CACQ,IAAR,mBACA,kBACQ,QAAR,UACA,mBACQ,QAAR,aC/F8V,I,YCO1VK,EAAY,eACd,EACAb,EACAY,GACA,EACA,KACA,WACA,MAIa,aAAAC,E","file":"js/chunk-2d22caaf.8eb15b60.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"page_component\"},[_c('h2',[_vm._v(\"axios的使用\")]),_c('h3',[_vm._v(\"axios实例和模块封装\")]),_c('p',[_vm._v(\"使用axios实例而不是使用axios全局对象可以方便以后扩展使用不同ip地址\")]),_c('p',[_vm._v(\"对axios进行模块封装可以使得更方便维护\")]),_vm._m(0),_c('div',{staticClass:\"page_content\"},[_c('div',{staticClass:\"page_code\"},[_c('el-button',{on:{\"click\":_vm.buttonClick}},[_vm._v(\"发送请求\")])],1),_vm._m(1)]),_c('h3',[_vm._v(\"axios拦截器\")]),_vm._m(2)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page_content\"},[_c('div',{staticClass:\"page_code\"},[_c('span',[_vm._v(\"在request.js中对axios进行实例化和封装\")])]),_c('pre',[_vm._v(\"        \"),_c('code',{staticClass:\"hljs\"},[_vm._v(\"import axios from 'axios'\\n\\nexport function request(config) {\\n  //创建axios实例\\n  const instance = axios.create({\\n    baseURL: 'http://123.207.32.32:8000',\\n    timeout: 5000\\n  })\\n\\n  return instance(config)\\n}\\n        \")]),_vm._v(\"\\n      \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('pre',[_vm._v(\"        \"),_c('code',{staticClass:\"hljs\"},[_vm._v(\"<el-button @click=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"buttonClick\\\"\")]),_vm._v(\">发送请求</el-button>\\n\\n<script>\\n  import {request} from \\\"../network/request\\\";\\n\\n  export default {\\n    name: \\\"Axios\\\",\\n    methods: {\\n      buttonClick() {\\n        request({\\n          url: 'home/multidata'\\n        }).then(res => {\\n          console.log(res);\\n        }).catch(err => {\\n          console.log(err);\\n        })\\n      }\\n    }\\n  }\\n</script>\\n        \")]),_vm._v(\"\\n      \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('pre',[_vm._v(\"        \"),_c('code',{staticClass:\"hljs\"},[_vm._v(\"\\n  //请求拦截\\n  instance.interceptors.request.use(config => {\\n    // 1.config中的一些信息不符合服务器的要求\\n\\n    // 2.每次发送网络请求时，都希望在界面中显示一个请求的图标\\n\\n    // 3.某些网络请求（登录（token）），必须携带一些特殊的信息\\n    return config\\n  },err => {\\n    console.log(err);\\n  });\\n\\n  //响应拦截\\n  instance.interceptors.response.use(res => {\\n    // 只返回data，不返回额外附加的一些属性\\n    return res.data\\n  },err => {\\n    console.log(err);\\n  });\\n        \")]),_vm._v(\"\\n      \")])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <section class=\"page_component\">\r\n    <h2>axios的使用</h2>\r\n    <h3>axios实例和模块封装</h3>\r\n    <p>使用axios实例而不是使用axios全局对象可以方便以后扩展使用不同ip地址</p>\r\n    <p>对axios进行模块封装可以使得更方便维护</p>\r\n    <div class=\"page_content\">\r\n      <div class=\"page_code\">\r\n        <span>在request.js中对axios进行实例化和封装</span>\r\n      </div>\r\n      <pre>\r\n        <code class=\"hljs\">import axios from 'axios'\r\n\r\nexport function request(config) {\r\n  //创建axios实例\r\n  const instance = axios.create({\r\n    baseURL: 'http://123.207.32.32:8000',\r\n    timeout: 5000\r\n  })\r\n\r\n  return instance(config)\r\n}\r\n        </code>\r\n      </pre>\r\n    </div>\r\n\r\n    <div class=\"page_content\">\r\n      <div class=\"page_code\">\r\n        <el-button @click=\"buttonClick\">发送请求</el-button>\r\n      </div>\r\n      <pre>\r\n        <code class=\"hljs\">&lt;el-button @click=<span class=\"hljs-string\">\"buttonClick\"</span>&gt;发送请求&lt;/el-button&gt;\r\n\r\n&lt;script&gt;\r\n  import {request} from \"../network/request\";\r\n\r\n  export default {\r\n    name: \"Axios\",\r\n    methods: {\r\n      buttonClick() {\r\n        request({\r\n          url: 'home/multidata'\r\n        }).then(res => {\r\n          console.log(res);\r\n        }).catch(err => {\r\n          console.log(err);\r\n        })\r\n      }\r\n    }\r\n  }\r\n&lt;/script&gt;\r\n        </code>\r\n      </pre>\r\n    </div>\r\n\r\n    <h3>axios拦截器</h3>\r\n      <pre>\r\n        <code class=\"hljs\">\r\n  //请求拦截\r\n  instance.interceptors.request.use(config => {\r\n    // 1.config中的一些信息不符合服务器的要求\r\n\r\n    // 2.每次发送网络请求时，都希望在界面中显示一个请求的图标\r\n\r\n    // 3.某些网络请求（登录（token）），必须携带一些特殊的信息\r\n    return config\r\n  },err => {\r\n    console.log(err);\r\n  });\r\n\r\n  //响应拦截\r\n  instance.interceptors.response.use(res => {\r\n    // 只返回data，不返回额外附加的一些属性\r\n    return res.data\r\n  },err => {\r\n    console.log(err);\r\n  });\r\n        </code>\r\n      </pre>\r\n  </section>\r\n\r\n</template>\r\n\r\n<script>\r\n  import {request} from \"network/request\";\r\n\r\n  export default {\r\n    name: \"Axios\",\r\n    methods: {\r\n      buttonClick() {\r\n        request({\r\n          url: 'home/multidata'\r\n        }).then(res => {\r\n          console.log(res);\r\n        }).catch(err => {\r\n          console.log(err);\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Axios.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Axios.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Axios.vue?vue&type=template&id=d32c77e2&scoped=true&\"\nimport script from \"./Axios.vue?vue&type=script&lang=js&\"\nexport * from \"./Axios.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d32c77e2\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}