(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d21ab0d"],{bd1f:function(t,n,e){"use strict";e.r(n);var s=function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("section",{staticClass:"page_component"},[e("h2",[t._v("vuex的使用")]),e("h3",[t._v("vuex的作用")]),e("p",[t._v("vuex是专门为Vue.js应用程序开发的状态管理模式")]),e("h3",[t._v("vuex的核心概念")]),e("h3",[t._v("State")]),e("p",[t._v("State保存变量状态，对应data")]),e("p",[t._v("State的值只能通过Mutation来改变，不能通过Action来改变")]),e("div",{staticClass:"page_content"},[e("div",{staticClass:"page_code"},[e("span",[t._v("示例")]),e("p",[t._v(t._s(t.$store.state.name))])]),t._m(0)]),e("h3",[t._v("Mutations")]),e("p",[t._v("Mutations存放一些同步操作")]),e("p",[t._v("Mutations需要通过this.$store.commit('mutations中的函数名','可选参数')进行调用")]),e("p",[t._v("多参数传递时通常使用对象进行传参")]),e("div",{staticClass:"page_content"},[e("div",{staticClass:"page_code"},[e("p",[t._v("示例 传参用法")]),e("el-button",{on:{click:function(n){return t.addCount(5)}}},[t._v("+5")]),e("span",{staticStyle:{"margin-left":"20px"}},[t._v(t._s(t.$store.state.count))])],1),t._m(1)]),e("h3",[t._v("Actions")]),e("p",[t._v("Actions用于做一些异步操作")]),e("p",[t._v("Actions需要通过this.$store.dispatch('actions中的函数名','可选参数')进行调用")]),e("p",[t._v("传参可以传数值或字符串也可以传一个对象")]),e("p",[t._v("在showMessage中返回一个Promise对象，然后在对应使用dispatch的地方使用then进行回调，达到数据响应通知的目的，是一种优雅的写法")]),e("div",{staticClass:"page_content"},[e("div",{staticClass:"page_code"},[e("el-button",{on:{click:t.buttonClick}},[t._v("Click Me")]),e("span",{staticStyle:{"margin-left":"20px"}},[t._v(t._s(t.$store.state.count))])],1),t._m(2)]),e("h3",[t._v("Getters")]),e("p",[t._v("类似于computed，做一些计算操作")]),e("p",[t._v("使用Getters传参要在getters的函数中返回一个函数，返回的函数中进行传参")]),e("div",{staticClass:"page_content"},[e("div",{staticClass:"page_code"},[e("span",[t._v("示例 传参用法")]),e("p",[t._v(t._s(t.$store.getters.sayHello("hello")))])]),t._m(3)]),e("h3",[t._v("Modules")]),e("p",[t._v("Vuex允许我们将store分割成模块，而每个模块拥有自己的state、mutations、actions、getters")])])},a=[function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("pre",[t._v("        "),e("code",{staticClass:"hljs"},[t._v("\n<template>\n  "),e("span",{pre:!0},[t._v("{{$store.state.name}}")]),t._v("\n</template>\n        ")]),t._v("\n      ")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("pre",[t._v("        "),e("code",{staticClass:"hljs"},[t._v("\n<template>\n  <el-button @click="),e("span",{staticClass:"hljs-string"},[t._v('"addCount(5)"')]),t._v(">+5</el-button>\n  <span style="),e("span",{staticClass:"hljs-string"},[t._v('"margin-left: 20px"')]),t._v(">"),e("span",{pre:!0},[t._v("{{$store.state.count}}")]),t._v("</span>\n</template>\n\n<script>\n  methods: {\n    addCount(count) {\n      this.$store.commit('increment',count);\n      //  特殊的提交封装\n      // this.$store.commit({\n      //   type: 'increment',\n      //   count\n      // })\n    }\n  }\n<\/script>\n        ")]),t._v("\n    "),e("span",[t._v("store的index.js中")]),t._v("\n        "),e("code",{staticClass:"hljs"},[t._v("\nstate: {\n  count: 0\n},\nmutations: {\n  increment(state,count) {\n    //使用特殊的提交封装时，这里的count是一个封装对象，要调用时需改为count.count\n    state.count += count;\n  }\n}\n        ")]),t._v("\n      ")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("pre",[t._v("        "),e("code",{staticClass:"hljs"},[t._v('\n<template>\n  <el-button @click="buttonClick">Click Me</el-button>\n  <span style='),e("span",{staticClass:"hljs-string"},[t._v('"margin-left: 20px"')]),t._v(">"),e("span",{pre:!0},[t._v("{{$store.state.count}}")]),t._v("</span>\n</template>\n\n<script>\n  methods: {\n    buttonClick() {\n      this.$store.dispatch('showMessage',{\n        num: 10\n      }).then(res => {\n        console.log(res);\n      })\n    }\n  }\n<\/script>\n        ")]),t._v("\n\n    "),e("span",[t._v("store的index.js中")]),t._v("\n        "),e("code",{staticClass:"hljs"},[t._v("\nactions: {\n  showMessage(context,payload) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        //这里使用context是为了区别Module中的actions，此处commit只会在当前的mutation中调用\n        context.commit('increment',payload.num)\n        resolve('改变了count')\n      }, 1000)\n    })\n  }\n},\nmutations: {\n  increment(state, count) {\n    state.count += count;\n  }\n},\n        ")]),t._v("\n      ")])},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("pre",[t._v("        "),e("code",{staticClass:"hljs"},[t._v("\n<template>\n  "),e("span",{pre:!0},[t._v("{{$store.getters.sayHello('hello')}}")]),t._v("\n</template>\n        ")]),t._v("\n    "),e("span",[t._v("store的index.js中")]),t._v("\n        "),e("code",{staticClass:"hljs"},[t._v("\ngetters: {\n  sayHello(state){\n    return hello => {\n      return hello + ' ' + state.name\n    }\n  }\n}\n        ")]),t._v("\n      ")])}],o={name:"Vuex",data:function(){return{}},methods:{addCount:function(t){this.$store.commit("increment",t)},buttonClick:function(){this.$store.dispatch("showMessage",{num:10}).then((function(t){console.log(t)}))}}},c=o,i=e("2877"),l=Object(i["a"])(c,s,a,!1,null,"11e5f5da",null);n["default"]=l.exports}}]);
//# sourceMappingURL=chunk-2d21ab0d.35b62662.js.map