(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0bd9a4"],{"2d62":function(l,e,t){"use strict";t.r(e);var n=function(){var l=this,e=l.$createElement;l._self._c;return l._m(0)},r=[function(){var l=this,e=l.$createElement,t=l._self._c||e;return t("section",{staticClass:"page_component"},[t("h2",[l._v("better-scroll的使用与封装")]),t("h3",[l._v("better-scroll的安装")]),t("p",[l._v("使用npm安装better-scroll")]),t("pre",[l._v("      "),t("code",{staticClass:"hljs"},[l._v("npm install better-scroll -S")]),l._v("\n    ")]),t("h3",[l._v("better-scroll的使用")]),t("p",[l._v("better-scroll只能包裹一个子元素，然后再通过子元素包裹其他元素，实现滚动")]),t("p",[l._v("better-scroll默认会阻止原生click事件的触发，因此在创建better-scroll的时候需设置click:true")]),t("h3",[l._v("scroll.on方法")]),t("p",[l._v("scroll.on方法用于绑定对应的事件方法")]),t("p",[l._v("this.scroll.on('scroll',(position) => {}) //监听滚动事件")]),t("p",[l._v("this.scroll.on('pullingUp', () => {}) //监听上拉事件")]),t("h3",[l._v("probeType属性")]),t("p",[l._v("probeType用于侦测better-scroll实时位置，默认0和1")]),t("p",[l._v("0和1不实时侦测")]),t("p",[l._v("2.在手指拖动的过程中侦测，而手指离开时的惯性不侦测")]),t("p",[l._v("3.只要是滚动都侦测惯性")]),t("h3",[l._v("pullUpLoad")]),t("p",[l._v("pullUpload用于做上拉加载功能，当设置为true或者是一个Object时，可以开启上拉加载，加载完成后需要执行finishPullIUp方法")]),t("p",[l._v("当使用pullUpLoad方法时，当上拉加载信息，对应的高度变更时，better-scroll中的scrollerHight没有及时更新，就会出现下拉卡顿，无法继续下拉")]),t("p",[l._v("解决办法：当图片加载完成时，调用scroll对象中的refresh方法进行刷新")]),t("p",[l._v("1：在main.js中使用Vue.prototype.$bus = new Vue()添加一个事件总线")]),t("p",[l._v("2：Vue中的img通过@load方法监听图片加载完成，加载完成时，调用this.$bus.$emit('method')发射完成事件")]),t("p",[l._v(" 3: 在主页面中调用this.$bus.$on('method'，function)监听该事件")]),t("p",[l._v("4：在回调函数中调用scroll对象中的refresh方法")]),t("h3",[l._v("better-scroll的封装")]),t("pre",[l._v("      "),t("code",{staticClass:"hljs"},[l._v("<template>\n  <div class=\"wrapper\" ref=\"wrapper\">\n    <div class=\"content\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        scroll: null\n      }\n    },\n    mounted() {\n      //1.创建BScroll对象\n      this.scroll = new BScroll(this.$refs.wrapper, {\n        click: true,\n        // 0和1不侦测实时位置\n        // 2.在手指拖动的过程中侦测，而手指离开时的惯性不侦测\n        // 3.只要是滚动都侦测惯性\n        probeType: this.probeType,\n        pullUpLoad: this.pullUpLoad\n      })\n\n      //2.监听滚动的位置\n      this.scroll.on('scroll',(position) => {\n        this.$emit('scroll',position);\n      })\n\n      //3.监听上拉事件\n      this.scroll.on('pullingUp',() => {\n        this.$emit('pullingUp');\n      })\n    },\n  }\n<\/script>\n      ")]),l._v("\n    ")])])}],s={name:"BetterScroll"},o=s,p=t("2877"),c=Object(p["a"])(o,n,r,!1,null,"db6b8f62",null);e["default"]=c.exports}}]);
//# sourceMappingURL=chunk-2d0bd9a4.a49d636c.js.map